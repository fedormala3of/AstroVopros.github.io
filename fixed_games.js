// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–≥—Ä

// –ò–≥—Ä–∞: –ö–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω—ã
function startWheelOfFortuneGame() {
    console.log('üé° –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã "–ö–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω—ã"');
    const cost = 35;
    const currentBalance = getCurrentBalance();
    
    if (currentBalance < cost) {
        showInsufficientBalance(cost, currentBalance);
        return;
    }
    
    const prizes = [
        { name: '–ú–∞–ª—ã–π –ø—Ä–∏–∑', reward: 50, color: '#f39c12' },
        { name: '–°—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–∑', reward: 100, color: '#e74c3c' },
        { name: '–ë–æ–ª—å—à–æ–π –ø—Ä–∏–∑', reward: 150, color: '#9b59b6' },
        { name: '–°—É–ø–µ—Ä –ø—Ä–∏–∑', reward: 200, color: '#2ecc71' },
        { name: '–£–¥–∞—á–∞', reward: 25, color: '#3498db' },
        { name: '–ë–æ–Ω—É—Å', reward: 75, color: '#e67e22' },
        { name: '–î–∂–µ–∫–ø–æ—Ç', reward: 300, color: '#f1c40f' },
        { name: '–£—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã–π', reward: 10, color: '#95a5a6' }
    ];
    
    const gameModal = document.createElement('div');
    gameModal.className = 'game-modal';
    gameModal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.9);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10000;
        animation: fadeIn 0.3s ease-out;
    `;
    
    const gameContent = document.createElement('div');
    gameContent.style.cssText = `
        background: linear-gradient(135deg, #f39c12 0%, #e67e22 100%);
        color: white;
        padding: 40px;
        border-radius: 25px;
        text-align: center;
        max-width: 400px;
        width: 90%;
        box-shadow: 0 20px 40px rgba(0,0,0,0.5);
        animation: slideInUp 0.5s ease-out;
    `;
    
    gameContent.innerHTML = `
        <div style="font-size: 60px; margin-bottom: 20px; animation: float 2s ease-in-out infinite;">üé°</div>
        <h2 style="margin: 0 0 20px 0; font-size: 28px;">–ö–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω—ã</h2>
        <p style="margin: 0 0 30px 0; font-size: 16px; opacity: 0.9;">–ö—Ä—É—Ç–∏—Ç–µ –∫–æ–ª–µ—Å–æ –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π—Ç–µ –ø—Ä–∏–∑—ã!</p>
        
        <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 15px; margin-bottom: 20px;">
            <div style="font-size: 14px; margin-bottom: 5px;">üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${cost} –º–æ–Ω–µ—Ç</div>
            <div style="font-size: 14px;">üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å: ${currentBalance} –º–æ–Ω–µ—Ç</div>
        </div>
        
        <button class="spin-wheel-btn" style="
            background: rgba(255,255,255,0.2);
            border: 2px solid white;
            color: white;
            padding: 15px 40px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 18px;
            font-weight: 600;
            transition: all 0.3s ease;
            margin-bottom: 20px;
        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
            üé° –ö—Ä—É—Ç–∏—Ç—å –∫–æ–ª–µ—Å–æ!
        </button>
        
        <button onclick="this.closest('.game-modal').remove()" style="
            background: rgba(255,255,255,0.2);
            border: 2px solid white;
            color: white;
            padding: 12px 30px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s ease;
        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
            –û—Ç–º–µ–Ω–∞
        </button>
    `;
    
    gameModal.appendChild(gameContent);
    document.body.appendChild(gameModal);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏
    gameContent.querySelector('.spin-wheel-btn').addEventListener('click', function() {
        deductCoins(cost);
        
        gameContent.innerHTML = `
            <div style="font-size: 80px; margin-bottom: 20px; animation: spin 3s linear infinite;">üé°</div>
            <h2 style="margin: 0 0 20px 0; font-size: 24px;">–ö–æ–ª–µ—Å–æ –∫—Ä—É—Ç–∏—Ç—Å—è...</h2>
            <p style="margin: 0; font-size: 16px; opacity: 0.9;">–§–æ—Ä—Ç—É–Ω–∞ —Ä–µ—à–∞–µ—Ç –≤–∞—à—É —Å—É–¥—å–±—É...</p>
        `;
        
        setTimeout(() => {
            const randomPrize = Math.floor(Math.random() * prizes.length);
            const prize = prizes[randomPrize];
            
            gameContent.innerHTML = `
                <div style="font-size: 60px; margin-bottom: 20px;">üéâ</div>
                <h2 style="margin: 0 0 20px 0; font-size: 24px;">${prize.name}!</h2>
                <div style="background: ${prize.color}; padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                    <div style="font-size: 32px; font-weight: 700; margin-bottom: 10px;">${prize.reward} –º–æ–Ω–µ—Ç</div>
                    <div style="font-size: 18px; opacity: 0.9;">${prize.name}</div>
                </div>
                <p style="margin: 0 0 20px 0; font-size: 16px;">
                    –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –≤—ã–∏–≥—Ä—ã—à–µ–º!
                </p>
                <button onclick="this.closest('.game-modal').remove()" style="
                    background: rgba(255,255,255,0.2);
                    border: 2px solid white;
                    color: white;
                    padding: 12px 30px;
                    border-radius: 25px;
                    cursor: pointer;
                    font-size: 16px;
                ">
                    –ó–∞–∫—Ä—ã—Ç—å
                </button>
            `;
            
            addCoins(prize.reward);
        }, 3000);
    });
}

// –ò–≥—Ä–∞: –ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –ª–∞–±–∏—Ä–∏–Ω—Ç
function startMysticLabyrinthGame() {
    console.log('üåÄ –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã "–ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –ª–∞–±–∏—Ä–∏–Ω—Ç"');
    const cost = 40;
    const currentBalance = getCurrentBalance();
    
    if (currentBalance < cost) {
        showInsufficientBalance(cost, currentBalance);
        return;
    }
    
    const gameModal = document.createElement('div');
    gameModal.className = 'game-modal';
    gameModal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.9);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10000;
        animation: fadeIn 0.3s ease-out;
    `;
    
    const gameContent = document.createElement('div');
    gameContent.style.cssText = `
        background: linear-gradient(135deg, #8e44ad 0%, #9b59b6 100%);
        color: white;
        padding: 40px;
        border-radius: 25px;
        text-align: center;
        max-width: 400px;
        width: 90%;
        box-shadow: 0 20px 40px rgba(0,0,0,0.5);
        animation: slideInUp 0.5s ease-out;
    `;
    
    gameContent.innerHTML = `
        <div style="font-size: 60px; margin-bottom: 20px; animation: float 2s ease-in-out infinite;">üåÄ</div>
        <h2 style="margin: 0 0 20px 0; font-size: 28px;">–ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –ª–∞–±–∏—Ä–∏–Ω—Ç</h2>
        <p style="margin: 0 0 30px 0; font-size: 16px; opacity: 0.9;">–í—ã–±–µ—Ä–∏—Ç–µ –ø—É—Ç—å –≤ –ª–∞–±–∏—Ä–∏–Ω—Ç–µ!</p>
        
        <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 15px; margin-bottom: 20px;">
            <div style="font-size: 14px; margin-bottom: 5px;">üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${cost} –º–æ–Ω–µ—Ç</div>
            <div style="font-size: 14px;">üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å: ${currentBalance} –º–æ–Ω–µ—Ç</div>
        </div>
        
        <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 15px; margin-bottom: 20px;">
            <button class="labyrinth-path" data-path="left" style="
                background: rgba(255,255,255,0.2);
                border: 2px solid rgba(255,255,255,0.3);
                color: white;
                padding: 20px;
                border-radius: 15px;
                cursor: pointer;
                font-size: 16px;
                transition: all 0.3s ease;
            " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
               onmouseout="this.style.background='rgba(255,255,255,0.2)'">
                ‚¨ÖÔ∏è –õ–µ–≤—ã–π –ø—É—Ç—å
            </button>
            <button class="labyrinth-path" data-path="right" style="
                background: rgba(255,255,255,0.2);
                border: 2px solid rgba(255,255,255,0.3);
                color: white;
                padding: 20px;
                border-radius: 15px;
                cursor: pointer;
                font-size: 16px;
                transition: all 0.3s ease;
            " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
               onmouseout="this.style.background='rgba(255,255,255,0.2)'">
                ‚û°Ô∏è –ü—Ä–∞–≤—ã–π –ø—É—Ç—å
            </button>
        </div>
        
        <button onclick="this.closest('.game-modal').remove()" style="
            background: rgba(255,255,255,0.2);
            border: 2px solid white;
            color: white;
            padding: 12px 30px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s ease;
        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
            –û—Ç–º–µ–Ω–∞
        </button>
    `;
    
    gameModal.appendChild(gameContent);
    document.body.appendChild(gameModal);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫
    gameContent.querySelectorAll('.labyrinth-path').forEach(button => {
        button.addEventListener('click', function() {
            const path = this.dataset.path;
            deductCoins(cost);
            
            gameContent.innerHTML = `
                <div style="font-size: 80px; margin-bottom: 20px; animation: spin 2s linear infinite;">üåÄ</div>
                <h2 style="margin: 0 0 20px 0; font-size: 24px;">–ò—Å—Å–ª–µ–¥—É–µ–º –ª–∞–±–∏—Ä–∏–Ω—Ç...</h2>
                <p style="margin: 0; font-size: 16px; opacity: 0.9;">–ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏–ª—ã –≤–µ–¥—É—Ç –≤–∞—Å...</p>
            `;
            
            setTimeout(() => {
                const rewards = [
                    { name: '–°–æ–∫—Ä–æ–≤–∏—â–µ', reward: 200, emoji: 'üíé' },
                    { name: '–ú–∞–≥–∏—á–µ—Å–∫–∏–π –∫—Ä–∏—Å—Ç–∞–ª–ª', reward: 150, emoji: 'üîÆ' },
                    { name: '–î—Ä–µ–≤–Ω–∏–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç', reward: 100, emoji: '‚ö±Ô∏è' },
                    { name: '–†—É–Ω–∏—á–µ—Å–∫–∏–π –∫–∞–º–µ–Ω—å', reward: 75, emoji: 'ü™®' },
                    { name: '–ú–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –ø—ã–ª—å', reward: 50, emoji: '‚ú®' }
                ];
                
                const randomReward = rewards[Math.floor(Math.random() * rewards.length)];
                
                gameContent.innerHTML = `
                    <div style="font-size: 60px; margin-bottom: 20px;">${randomReward.emoji}</div>
                    <h2 style="margin: 0 0 20px 0; font-size: 24px;">–ù–∞–π–¥–µ–Ω–æ —Å–æ–∫—Ä–æ–≤–∏—â–µ!</h2>
                    <div style="background: rgba(255,255,255,0.1); padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                        <div style="font-size: 18px; margin-bottom: 10px;">${randomReward.name}</div>
                        <div style="font-size: 24px; font-weight: 700;">${randomReward.reward} –º–æ–Ω–µ—Ç</div>
                    </div>
                    <p style="margin: 0 0 20px 0; font-size: 16px;">
                        –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ –ª–∞–±–∏—Ä–∏–Ω—Ç!
                    </p>
                    <button onclick="this.closest('.game-modal').remove()" style="
                        background: rgba(255,255,255,0.2);
                        border: 2px solid white;
                        color: white;
                        padding: 12px 30px;
                        border-radius: 25px;
                        cursor: pointer;
                        font-size: 16px;
                    ">
                        –ó–∞–∫—Ä—ã—Ç—å
                    </button>
                `;
                
                addCoins(randomReward.reward);
            }, 2000);
        });
    });
}

// –ò–≥—Ä–∞: –ó–≤–µ–∑–¥–Ω–∞—è –∫–∞—Ä—Ç–∞
function startStarMapGame() {
    console.log('‚≠ê –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã "–ó–≤–µ–∑–¥–Ω–∞—è –∫–∞—Ä—Ç–∞"');
    const cost = 45;
    const currentBalance = getCurrentBalance();
    
    if (currentBalance < cost) {
        showInsufficientBalance(cost, currentBalance);
        return;
    }
    
    const constellations = [
        { name: '–û—Ä–∏–æ–Ω', symbol: 'üèπ', stars: '‚≠ê‚≠ê‚≠ê' },
        { name: '–ë–æ–ª—å—à–∞—è –ú–µ–¥–≤–µ–¥–∏—Ü–∞', symbol: 'üêª', stars: '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê' },
        { name: '–ö–∞—Å—Å–∏–æ–ø–µ—è', symbol: 'üëë', stars: '‚≠ê‚≠ê‚≠ê‚≠ê' },
        { name: '–õ–µ–±–µ–¥—å', symbol: 'ü¶¢', stars: '‚≠ê‚≠ê‚≠ê' },
        { name: '–ü–µ–≥–∞—Å', symbol: 'üê¥', stars: '‚≠ê‚≠ê‚≠ê‚≠ê' },
        { name: '–î—Ä–∞–∫–æ–Ω', symbol: 'üêâ', stars: '‚≠ê‚≠ê‚≠ê' },
        { name: '–ì–µ—Ä–∫—É–ª–µ—Å', symbol: 'üí™', stars: '‚≠ê‚≠ê‚≠ê' },
        { name: '–ê–Ω–¥—Ä–æ–º–µ–¥–∞', symbol: 'üë∏', stars: '‚≠ê‚≠ê‚≠ê' }
    ];
    
    const gameModal = document.createElement('div');
    gameModal.className = 'game-modal';
    gameModal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.9);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10000;
        animation: fadeIn 0.3s ease-out;
    `;
    
    const gameContent = document.createElement('div');
    gameContent.style.cssText = `
        background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
        color: white;
        padding: 40px;
        border-radius: 25px;
        text-align: center;
        max-width: 500px;
        width: 90%;
        box-shadow: 0 20px 40px rgba(0,0,0,0.5);
        animation: slideInUp 0.5s ease-out;
    `;
    
    gameContent.innerHTML = `
        <div style="font-size: 60px; margin-bottom: 20px; animation: float 2s ease-in-out infinite;">‚≠ê</div>
        <h2 style="margin: 0 0 20px 0; font-size: 28px;">–ó–≤–µ–∑–¥–Ω–∞—è –∫–∞—Ä—Ç–∞</h2>
        <p style="margin: 0 0 30px 0; font-size: 16px; opacity: 0.9;">–£–≥–∞–¥–∞–π—Ç–µ —Å–æ–∑–≤–µ–∑–¥–∏–µ –ø–æ —Å–∏–º–≤–æ–ª–∞–º!</p>
        
        <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 15px; margin-bottom: 20px;">
            <div style="font-size: 14px; margin-bottom: 5px;">üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${cost} –º–æ–Ω–µ—Ç</div>
            <div style="font-size: 14px;">üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å: ${currentBalance} –º–æ–Ω–µ—Ç</div>
        </div>
        
        <button class="start-star-game" style="
            background: rgba(255,255,255,0.2);
            border: 2px solid white;
            color: white;
            padding: 15px 40px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 18px;
            font-weight: 600;
            transition: all 0.3s ease;
            margin-bottom: 20px;
        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
            ‚≠ê –ù–∞—á–∞—Ç—å –∏–≥—Ä—É!
        </button>
        
        <button onclick="this.closest('.game-modal').remove()" style="
            background: rgba(255,255,255,0.2);
            border: 2px solid white;
            color: white;
            padding: 12px 30px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s ease;
        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
            –û—Ç–º–µ–Ω–∞
        </button>
    `;
    
    gameModal.appendChild(gameContent);
    document.body.appendChild(gameModal);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏
    gameContent.querySelector('.start-star-game').addEventListener('click', function() {
        deductCoins(cost);
        
        gameContent.innerHTML = `
            <div style="font-size: 80px; margin-bottom: 20px; animation: spin 2s linear infinite;">‚≠ê</div>
            <h2 style="margin: 0 0 20px 0; font-size: 24px;">–ó–≤–µ–∑–¥—ã –≤—ã—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è...</h2>
            <p style="margin: 0; font-size: 16px; opacity: 0.9;">–ö–æ—Å–º–∏—á–µ—Å–∫–∏–µ —Å–∏–ª—ã —Ä–∞–±–æ—Ç–∞—é—Ç...</p>
        `;
        
        setTimeout(() => {
            const randomConstellation = Math.floor(Math.random() * constellations.length);
            const constellation = constellations[randomConstellation];
            
            gameContent.innerHTML = `
                <div style="font-size: 60px; margin-bottom: 20px;">${constellation.stars}</div>
                <h2 style="margin: 0 0 20px 0; font-size: 24px;">–ö–∞–∫–æ–µ —ç—Ç–æ —Å–æ–∑–≤–µ–∑–¥–∏–µ?</h2>
                <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 15px; margin-bottom: 20px;">
                    ${constellations.map((constellation, index) => `
                        <button class="constellation-choice" data-const="${index}" style="
                            background: rgba(255,255,255,0.2);
                            border: 2px solid rgba(255,255,255,0.3);
                            color: white;
                            padding: 15px;
                            border-radius: 15px;
                            cursor: pointer;
                            font-size: 14px;
                            transition: all 0.3s ease;
                        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
                           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
                            ${constellation.symbol} ${constellation.name}
                        </button>
                    `).join('')}
                </div>
            `;
            
            gameContent.querySelectorAll('.constellation-choice').forEach(button => {
                button.addEventListener('click', function() {
                    const selectedConst = parseInt(this.dataset.const);
                    const isWin = selectedConst === randomConstellation;
                    const reward = isWin ? 300 : 0;
                    
                    gameContent.innerHTML = `
                        <div style="font-size: 60px; margin-bottom: 20px;">${isWin ? 'üåü' : '‚≠ê'}</div>
                        <h2 style="margin: 0 0 20px 0; font-size: 24px;">${isWin ? '–ü—Ä–∞–≤–∏–ª—å–Ω–æ!' : '–ù–µ–≤–µ—Ä–Ω–æ!'}</h2>
                        <div style="background: rgba(255,255,255,0.1); padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                            <div style="font-size: 18px; margin-bottom: 10px;">–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${constellation.symbol} ${constellation.name}</div>
                            <div style="font-size: 16px; opacity: 0.9;">–í–∞—à –≤—ã–±–æ—Ä: ${constellations[selectedConst].symbol} ${constellations[selectedConst].name}</div>
                        </div>
                        <p style="margin: 0 0 20px 0; font-size: 16px;">
                            ${isWin ? `–û—Ç–ª–∏—á–Ω–æ! –í—ã–∏–≥—Ä—ã—à: ${reward} –º–æ–Ω–µ—Ç` : '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!'}
                        </p>
                        <button onclick="this.closest('.game-modal').remove()" style="
                            background: rgba(255,255,255,0.2);
                            border: 2px solid white;
                            color: white;
                            padding: 12px 30px;
                            border-radius: 25px;
                            cursor: pointer;
                            font-size: 16px;
                        ">
                            –ó–∞–∫—Ä—ã—Ç—å
                        </button>
                    `;
                    
                    if (reward > 0) {
                        addCoins(reward);
                    }
                });
            });
        }, 2000);
    });
}

// –ò–≥—Ä–∞: –ö—Ä–∏—Å—Ç–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å
function startCrystalMemoryGame() {
    console.log('üíé –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã "–ö—Ä–∏—Å—Ç–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å"');
    const cost = 50;
    const currentBalance = getCurrentBalance();
    
    if (currentBalance < cost) {
        showInsufficientBalance(cost, currentBalance);
        return;
    }
    
    const gameModal = document.createElement('div');
    gameModal.className = 'game-modal';
    gameModal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.9);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10000;
        animation: fadeIn 0.3s ease-out;
    `;
    
    const gameContent = document.createElement('div');
    gameContent.style.cssText = `
        background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
        color: white;
        padding: 40px;
        border-radius: 25px;
        text-align: center;
        max-width: 400px;
        width: 90%;
        box-shadow: 0 20px 40px rgba(0,0,0,0.5);
        animation: slideInUp 0.5s ease-out;
    `;
    
    gameContent.innerHTML = `
        <div style="font-size: 60px; margin-bottom: 20px; animation: float 2s ease-in-out infinite;">üíé</div>
        <h2 style="margin: 0 0 20px 0; font-size: 28px;">–ö—Ä–∏—Å—Ç–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å</h2>
        <p style="margin: 0 0 30px 0; font-size: 16px; opacity: 0.9;">–ó–∞–ø–æ–º–Ω–∏—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤!</p>
        
        <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 15px; margin-bottom: 20px;">
            <div style="font-size: 14px; margin-bottom: 5px;">üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${cost} –º–æ–Ω–µ—Ç</div>
            <div style="font-size: 14px;">üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å: ${currentBalance} –º–æ–Ω–µ—Ç</div>
        </div>
        
        <button class="start-memory-game" style="
            background: rgba(255,255,255,0.2);
            border: 2px solid white;
            color: white;
            padding: 15px 40px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 18px;
            font-weight: 600;
            transition: all 0.3s ease;
            margin-bottom: 20px;
        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
            üíé –ù–∞—á–∞—Ç—å –∏–≥—Ä—É!
        </button>
        
        <button onclick="this.closest('.game-modal').remove()" style="
            background: rgba(255,255,255,0.2);
            border: 2px solid white;
            color: white;
            padding: 12px 30px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s ease;
        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
            –û—Ç–º–µ–Ω–∞
        </button>
    `;
    
    gameModal.appendChild(gameContent);
    document.body.appendChild(gameModal);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏
    gameContent.querySelector('.start-memory-game').addEventListener('click', function() {
        deductCoins(cost);
        
        const crystals = ['üíé', 'üîÆ', 'üí†', 'üî∑', 'üíô'];
        const sequence = [];
        const sequenceLength = 3 + Math.floor(Math.random() * 3); // 3-5 –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        for (let i = 0; i < sequenceLength; i++) {
            sequence.push(crystals[Math.floor(Math.random() * crystals.length)]);
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        gameContent.innerHTML = `
            <div style="font-size: 60px; margin-bottom: 20px;">üíé</div>
            <h2 style="margin: 0 0 20px 0; font-size: 24px;">–ó–∞–ø–æ–º–Ω–∏—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å!</h2>
            <div style="font-size: 40px; margin-bottom: 20px; letter-spacing: 10px;">
                ${sequence.join(' ')}
            </div>
            <p style="margin: 0; font-size: 16px; opacity: 0.9;">–°–µ–∫—É–Ω–¥ –¥–æ –Ω–∞—á–∞–ª–∞...</p>
        `;
        
        let countdown = 3;
        const countdownInterval = setInterval(() => {
            countdown--;
            if (countdown > 0) {
                gameContent.querySelector('p').textContent = `–°–µ–∫—É–Ω–¥ –¥–æ –Ω–∞—á–∞–ª–∞: ${countdown}`;
            } else {
                clearInterval(countdownInterval);
                startMemoryTest();
            }
        }, 1000);
        
        function startMemoryTest() {
            gameContent.innerHTML = `
                <div style="font-size: 60px; margin-bottom: 20px;">üîÆ</div>
                <h2 style="margin: 0 0 20px 0; font-size: 24px;">–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å!</h2>
                <div style="display: grid; grid-template-columns: repeat(5, 1fr); gap: 10px; margin-bottom: 20px;">
                    ${crystals.map((crystal, index) => `
                        <button class="crystal-choice" data-crystal="${crystal}" style="
                            background: rgba(255,255,255,0.2);
                            border: 2px solid rgba(255,255,255,0.3);
                            color: white;
                            padding: 15px;
                            border-radius: 15px;
                            cursor: pointer;
                            font-size: 24px;
                            transition: all 0.3s ease;
                        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
                           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
                            ${crystal}
                        </button>
                    `).join('')}
                </div>
                <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 15px; margin-bottom: 20px;">
                    <div style="font-size: 16px;">–í–∞—à–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</div>
                    <div id="user-sequence" style="font-size: 24px; margin-top: 10px; min-height: 30px;"></div>
                </div>
            `;
            
            let userSequence = [];
            const userSequenceDiv = document.getElementById('user-sequence');
            
            gameContent.querySelectorAll('.crystal-choice').forEach(button => {
                button.addEventListener('click', function() {
                    const crystal = this.dataset.crystal;
                    userSequence.push(crystal);
                    userSequenceDiv.textContent = userSequence.join(' ');
                    
                    if (userSequence.length === sequence.length) {
                        checkSequence();
                    }
                });
            });
            
            function checkSequence() {
                const isCorrect = JSON.stringify(userSequence) === JSON.stringify(sequence);
                let reward = 0;
                
                if (isCorrect) {
                    reward = 100 + (sequence.length - 3) * 50; // 100-200 –º–æ–Ω–µ—Ç
                }
                
                gameContent.innerHTML = `
                    <div style="font-size: 60px; margin-bottom: 20px;">${isCorrect ? 'üéâ' : 'üíé'}</div>
                    <h2 style="margin: 0 0 20px 0; font-size: 24px;">${isCorrect ? '–ü—Ä–∞–≤–∏–ª—å–Ω–æ!' : '–ù–µ–≤–µ—Ä–Ω–æ!'}</h2>
                    <div style="background: rgba(255,255,255,0.1); padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                        <div style="font-size: 18px; margin-bottom: 10px;">–ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</div>
                        <div style="font-size: 24px; margin-bottom: 10px;">${sequence.join(' ')}</div>
                        <div style="font-size: 18px; margin-bottom: 10px;">–í–∞—à–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</div>
                        <div style="font-size: 24px;">${userSequence.join(' ')}</div>
                    </div>
                    <p style="margin: 0 0 20px 0; font-size: 16px;">
                        ${isCorrect ? `–û—Ç–ª–∏—á–Ω–æ! –í—ã–∏–≥—Ä—ã—à: ${reward} –º–æ–Ω–µ—Ç` : '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!'}
                    </p>
                    <button onclick="this.closest('.game-modal').remove()" style="
                        background: rgba(255,255,255,0.2);
                        border: 2px solid white;
                        color: white;
                        padding: 12px 30px;
                        border-radius: 25px;
                        cursor: pointer;
                        font-size: 16px;
                    ">
                        –ó–∞–∫—Ä—ã—Ç—å
                    </button>
                `;
                
                if (reward > 0) {
                    addCoins(reward);
                }
            }
        }
    });
}
