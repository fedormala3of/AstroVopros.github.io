// –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ò–ì–†–´ –ò –§–£–ù–ö–¶–ò–ò –î–õ–Ø –¢–ê–†–û-–ë–û–¢–ê

// –ò–≥—Ä–∞: –ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –ª–∞–±–∏—Ä–∏–Ω—Ç
function startMysticLabyrinthGame() {
    console.log('üåÄ –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã "–ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –ª–∞–±–∏—Ä–∏–Ω—Ç"');
    const cost = 40;
    const currentBalance = getCurrentBalance();
    
    if (currentBalance < cost) {
        showInsufficientBalance(cost, currentBalance);
        return;
    }
    
    const gameModal = document.createElement('div');
    gameModal.className = 'game-modal';
    gameModal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.9);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10000;
        animation: fadeIn 0.3s ease-out;
    `;
    
    const gameContent = document.createElement('div');
    gameContent.style.cssText = `
        background: linear-gradient(135deg, #8e44ad 0%, #9b59b6 100%);
        color: white;
        padding: 40px;
        border-radius: 25px;
        text-align: center;
        max-width: 400px;
        width: 90%;
        box-shadow: 0 20px 40px rgba(0,0,0,0.5);
        animation: slideInUp 0.5s ease-out;
    `;
    
    gameContent.innerHTML = `
        <div style="font-size: 60px; margin-bottom: 20px; animation: float 2s ease-in-out infinite;">üåÄ</div>
        <h2 style="margin: 0 0 20px 0; font-size: 28px;">–ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –ª–∞–±–∏—Ä–∏–Ω—Ç</h2>
        <p style="margin: 0 0 30px 0; font-size: 16px; opacity: 0.9;">–ù–∞–π–¥–∏—Ç–µ –≤—ã—Ö–æ–¥ –∏–∑ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –ª–∞–±–∏—Ä–∏–Ω—Ç–∞!</p>
        
        <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 15px; margin-bottom: 20px;">
            <div style="font-size: 14px; margin-bottom: 5px;">üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${cost} –º–æ–Ω–µ—Ç</div>
            <div style="font-size: 14px;">üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å: ${currentBalance} –º–æ–Ω–µ—Ç</div>
        </div>
        
        <button onclick="startLabyrinth()" style="
            background: rgba(255,255,255,0.2);
            border: 2px solid white;
            color: white;
            padding: 15px 40px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 18px;
            font-weight: 600;
            transition: all 0.3s ease;
            margin-bottom: 20px;
        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
            üåÄ –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫!
        </button>
        
        <button onclick="this.closest('.game-modal').remove()" style="
            background: rgba(255,255,255,0.2);
            border: 2px solid white;
            color: white;
            padding: 12px 30px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s ease;
        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
            –û—Ç–º–µ–Ω–∞
        </button>
    `;
    
    gameModal.appendChild(gameContent);
    document.body.appendChild(gameModal);
    
    function startLabyrinth() {
        deductCoins(cost);
        
        gameContent.innerHTML = `
            <div style="font-size: 80px; margin-bottom: 20px; animation: spin 3s linear infinite;">üåÄ</div>
            <h2 style="margin: 0 0 20px 0; font-size: 24px;">–ò—Å—Å–ª–µ–¥—É–µ–º –ª–∞–±–∏—Ä–∏–Ω—Ç...</h2>
            <p style="margin: 0; font-size: 16px; opacity: 0.9;">–ò—â–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å...</p>
        `;
        
        setTimeout(() => {
            const paths = ['–ª–µ–≤–æ', '–ø—Ä–∞–≤–æ', '–ø—Ä—è–º–æ', '–Ω–∞–∑–∞–¥'];
            const correctPath = Math.floor(Math.random() * 4);
            const userPath = Math.floor(Math.random() * 4);
            const isWin = correctPath === userPath;
            const reward = isWin ? 250 : 0;
            
            gameContent.innerHTML = `
                <div style="font-size: 60px; margin-bottom: 20px;">${isWin ? 'üèÜ' : 'üòî'}</div>
                <h2 style="margin: 0 0 20px 0; font-size: 24px;">${isWin ? '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!' : '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!'}</h2>
                <div style="background: rgba(255,255,255,0.1); padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                    <div style="font-size: 18px; margin-bottom: 10px;">–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å: ${paths[correctPath]}</div>
                    <div style="font-size: 16px; opacity: 0.9;">–í–∞—à –≤—ã–±–æ—Ä: ${paths[userPath]}</div>
                </div>
                <p style="margin: 0 0 20px 0; font-size: 16px;">
                    ${isWin ? `–í—ã –Ω–∞—à–ª–∏ –≤—ã—Ö–æ–¥! –í—ã–∏–≥—Ä—ã—à: ${reward} –º–æ–Ω–µ—Ç` : '–õ–∞–±–∏—Ä–∏–Ω—Ç –∑–∞–ø—É—Ç–∞–ª –≤–∞—Å...'}
                </p>
                <button onclick="this.closest('.game-modal').remove()" style="
                    background: rgba(255,255,255,0.2);
                    border: 2px solid white;
                    color: white;
                    padding: 12px 30px;
                    border-radius: 25px;
                    cursor: pointer;
                    font-size: 16px;
                ">
                    –ó–∞–∫—Ä—ã—Ç—å
                </button>
            `;
            
            if (reward > 0) {
                addCoins(reward);
            }
        }, 3000);
    }
}

// –ò–≥—Ä–∞: –ó–≤–µ–∑–¥–Ω–∞—è –∫–∞—Ä—Ç–∞
function startStarMapGame() {
    console.log('‚≠ê –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã "–ó–≤–µ–∑–¥–Ω–∞—è –∫–∞—Ä—Ç–∞"');
    const cost = 45;
    const currentBalance = getCurrentBalance();
    
    if (currentBalance < cost) {
        showInsufficientBalance(cost, currentBalance);
        return;
    }
    
    const constellations = [
        { name: '–ë–æ–ª—å—à–∞—è –ú–µ–¥–≤–µ–¥–∏—Ü–∞', symbol: 'üêª', stars: '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê' },
        { name: '–û—Ä–∏–æ–Ω', symbol: 'üèπ', stars: '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê' },
        { name: '–ö–∞—Å—Å–∏–æ–ø–µ—è', symbol: 'üëë', stars: '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê' },
        { name: '–õ–µ–±–µ–¥—å', symbol: 'ü¶¢', stars: '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê' },
        { name: '–ü–µ–≥–∞—Å', symbol: 'üêé', stars: '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê' },
        { name: '–î—Ä–∞–∫–æ–Ω', symbol: 'üêâ', stars: '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê' }
    ];
    
    const gameModal = document.createElement('div');
    gameModal.className = 'game-modal';
    gameModal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.9);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10000;
        animation: fadeIn 0.3s ease-out;
    `;
    
    const gameContent = document.createElement('div');
    gameContent.style.cssText = `
        background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
        color: white;
        padding: 40px;
        border-radius: 25px;
        text-align: center;
        max-width: 400px;
        width: 90%;
        box-shadow: 0 20px 40px rgba(0,0,0,0.5);
        animation: slideInUp 0.5s ease-out;
    `;
    
    gameContent.innerHTML = `
        <div style="font-size: 60px; margin-bottom: 20px; animation: float 2s ease-in-out infinite;">‚≠ê</div>
        <h2 style="margin: 0 0 20px 0; font-size: 28px;">–ó–≤–µ–∑–¥–Ω–∞—è –∫–∞—Ä—Ç–∞</h2>
        <p style="margin: 0 0 30px 0; font-size: 16px; opacity: 0.9;">–£–≥–∞–¥–∞–π—Ç–µ —Å–æ–∑–≤–µ–∑–¥–∏–µ –ø–æ –∑–≤–µ–∑–¥–∞–º!</p>
        
        <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 15px; margin-bottom: 20px;">
            <div style="font-size: 14px; margin-bottom: 5px;">üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${cost} –º–æ–Ω–µ—Ç</div>
            <div style="font-size: 14px;">üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å: ${currentBalance} –º–æ–Ω–µ—Ç</div>
        </div>
        
        <button onclick="showConstellation()" style="
            background: rgba(255,255,255,0.2);
            border: 2px solid white;
            color: white;
            padding: 15px 40px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 18px;
            font-weight: 600;
            transition: all 0.3s ease;
            margin-bottom: 20px;
        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
            ‚≠ê –ü–æ–∫–∞–∑–∞—Ç—å –∑–≤–µ–∑–¥—ã!
        </button>
        
        <button onclick="this.closest('.game-modal').remove()" style="
            background: rgba(255,255,255,0.2);
            border: 2px solid white;
            color: white;
            padding: 12px 30px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s ease;
        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
            –û—Ç–º–µ–Ω–∞
        </button>
    `;
    
    gameModal.appendChild(gameContent);
    document.body.appendChild(gameModal);
    
    function showConstellation() {
        deductCoins(cost);
        
        const randomConstellation = Math.floor(Math.random() * constellations.length);
        const constellation = constellations[randomConstellation];
        
        gameContent.innerHTML = `
            <div style="font-size: 60px; margin-bottom: 20px;">${constellation.stars}</div>
            <h2 style="margin: 0 0 20px 0; font-size: 24px;">–ö–∞–∫–æ–µ —ç—Ç–æ —Å–æ–∑–≤–µ–∑–¥–∏–µ?</h2>
            <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 15px; margin-bottom: 20px;">
                ${constellations.map((const, index) => `
                    <button class="constellation-choice" data-const="${index}" style="
                        background: rgba(255,255,255,0.2);
                        border: 2px solid rgba(255,255,255,0.3);
                        color: white;
                        padding: 15px;
                        border-radius: 15px;
                        cursor: pointer;
                        font-size: 14px;
                        transition: all 0.3s ease;
                    " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
                       onmouseout="this.style.background='rgba(255,255,255,0.2)'">
                        ${const.symbol} ${const.name}
                    </button>
                `).join('')}
            </div>
        `;
        
        gameContent.querySelectorAll('.constellation-choice').forEach(button => {
            button.addEventListener('click', function() {
                const selectedConst = parseInt(this.dataset.const);
                const isWin = selectedConst === randomConstellation;
                const reward = isWin ? 300 : 0;
                
                gameContent.innerHTML = `
                    <div style="font-size: 60px; margin-bottom: 20px;">${isWin ? 'üåü' : '‚≠ê'}</div>
                    <h2 style="margin: 0 0 20px 0; font-size: 24px;">${isWin ? '–ü—Ä–∞–≤–∏–ª—å–Ω–æ!' : '–ù–µ–≤–µ—Ä–Ω–æ!'}</h2>
                    <div style="background: rgba(255,255,255,0.1); padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                        <div style="font-size: 18px; margin-bottom: 10px;">–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${constellation.symbol} ${constellation.name}</div>
                        <div style="font-size: 16px; opacity: 0.9;">–í–∞—à –≤—ã–±–æ—Ä: ${constellations[selectedConst].symbol} ${constellations[selectedConst].name}</div>
                    </div>
                    <p style="margin: 0 0 20px 0; font-size: 16px;">
                        ${isWin ? `–û—Ç–ª–∏—á–Ω–æ! –í—ã–∏–≥—Ä—ã—à: ${reward} –º–æ–Ω–µ—Ç` : '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!'}
                    </p>
                    <button onclick="this.closest('.game-modal').remove()" style="
                        background: rgba(255,255,255,0.2);
                        border: 2px solid white;
                        color: white;
                        padding: 12px 30px;
                        border-radius: 25px;
                        cursor: pointer;
                        font-size: 16px;
                    ">
                        –ó–∞–∫—Ä—ã—Ç—å
                    </button>
                `;
                
                if (reward > 0) {
                    addCoins(reward);
                }
            });
        });
    }
}

// –ò–≥—Ä–∞: –ö—Ä–∏—Å—Ç–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å
function startCrystalMemoryGame() {
    console.log('üíé –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã "–ö—Ä–∏—Å—Ç–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å"');
    const cost = 50;
    const currentBalance = getCurrentBalance();
    
    if (currentBalance < cost) {
        showInsufficientBalance(cost, currentBalance);
        return;
    }
    
    const crystals = ['üíé', 'üîÆ', 'üí†', 'üî∑', 'üî∂', 'üíú', 'üíô', 'üíö'];
    
    const gameModal = document.createElement('div');
    gameModal.className = 'game-modal';
    gameModal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.9);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10000;
        animation: fadeIn 0.3s ease-out;
    `;
    
    const gameContent = document.createElement('div');
    gameContent.style.cssText = `
        background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
        color: white;
        padding: 40px;
        border-radius: 25px;
        text-align: center;
        max-width: 400px;
        width: 90%;
        box-shadow: 0 20px 40px rgba(0,0,0,0.5);
        animation: slideInUp 0.5s ease-out;
    `;
    
    gameContent.innerHTML = `
        <div style="font-size: 60px; margin-bottom: 20px; animation: float 2s ease-in-out infinite;">üíé</div>
        <h2 style="margin: 0 0 20px 0; font-size: 28px;">–ö—Ä–∏—Å—Ç–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å</h2>
        <p style="margin: 0 0 30px 0; font-size: 16px; opacity: 0.9;">–ó–∞–ø–æ–º–Ω–∏—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤!</p>
        
        <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 15px; margin-bottom: 20px;">
            <div style="font-size: 14px; margin-bottom: 5px;">üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${cost} –º–æ–Ω–µ—Ç</div>
            <div style="font-size: 14px;">üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å: ${currentBalance} –º–æ–Ω–µ—Ç</div>
        </div>
        
        <button onclick="startMemoryGame()" style="
            background: rgba(255,255,255,0.2);
            border: 2px solid white;
            color: white;
            padding: 15px 40px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 18px;
            font-weight: 600;
            transition: all 0.3s ease;
            margin-bottom: 20px;
        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
            üíé –ù–∞—á–∞—Ç—å –∏–≥—Ä—É!
        </button>
        
        <button onclick="this.closest('.game-modal').remove()" style="
            background: rgba(255,255,255,0.2);
            border: 2px solid white;
            color: white;
            padding: 12px 30px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s ease;
        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
            –û—Ç–º–µ–Ω–∞
        </button>
    `;
    
    gameModal.appendChild(gameContent);
    document.body.appendChild(gameModal);
    
    function startMemoryGame() {
        deductCoins(cost);
        
        const sequence = [];
        for (let i = 0; i < 4; i++) {
            sequence.push(Math.floor(Math.random() * crystals.length));
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        let currentIndex = 0;
        gameContent.innerHTML = `
            <div style="font-size: 60px; margin-bottom: 20px;">${crystals[sequence[currentIndex]]}</div>
            <h2 style="margin: 0 0 20px 0; font-size: 24px;">–ó–∞–ø–æ–º–∏–Ω–∞–π—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å...</h2>
            <p style="margin: 0; font-size: 16px; opacity: 0.9;">–ö—Ä–∏—Å—Ç–∞–ª–ª ${currentIndex + 1} –∏–∑ 4</p>
        `;
        
        const showNext = () => {
            currentIndex++;
            if (currentIndex < sequence.length) {
                setTimeout(() => {
                    gameContent.innerHTML = `
                        <div style="font-size: 60px; margin-bottom: 20px;">${crystals[sequence[currentIndex]]}</div>
                        <h2 style="margin: 0 0 20px 0; font-size: 24px;">–ó–∞–ø–æ–º–∏–Ω–∞–π—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å...</h2>
                        <p style="margin: 0; font-size: 16px; opacity: 0.9;">–ö—Ä–∏—Å—Ç–∞–ª–ª ${currentIndex + 1} –∏–∑ 4</p>
                    `;
                    showNext();
                }, 1000);
            } else {
                setTimeout(() => {
                    showUserInput(sequence);
                }, 1000);
            }
        };
        
        showNext();
    }
    
    function showUserInput(sequence) {
        gameContent.innerHTML = `
            <h2 style="margin: 0 0 20px 0; font-size: 24px;">–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</h2>
            <div style="display: grid; grid-template-columns: repeat(4, 1fr); gap: 15px; margin-bottom: 20px;">
                ${crystals.map((crystal, index) => `
                    <button class="crystal-choice" data-crystal="${index}" style="
                        background: rgba(255,255,255,0.2);
                        border: 2px solid rgba(255,255,255,0.3);
                        color: white;
                        padding: 20px;
                        border-radius: 15px;
                        cursor: pointer;
                        font-size: 24px;
                        transition: all 0.3s ease;
                    " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
                       onmouseout="this.style.background='rgba(255,255,255,0.2)'">
                        ${crystal}
                    </button>
                `).join('')}
            </div>
            <div id="user-sequence" style="font-size: 24px; margin-bottom: 20px;"></div>
        `;
        
        let userSequence = [];
        const userSequenceDiv = document.getElementById('user-sequence');
        
        gameContent.querySelectorAll('.crystal-choice').forEach(button => {
            button.addEventListener('click', function() {
                const crystalIndex = parseInt(this.dataset.crystal);
                userSequence.push(crystalIndex);
                userSequenceDiv.textContent = userSequence.map(i => crystals[i]).join(' ');
                
                if (userSequence.length === sequence.length) {
                    checkSequence(sequence, userSequence);
                }
            });
        });
    }
    
    function checkSequence(sequence, userSequence) {
        const isCorrect = sequence.every((crystal, index) => crystal === userSequence[index]);
        const reward = isCorrect ? 400 : 0;
        
        gameContent.innerHTML = `
            <div style="font-size: 60px; margin-bottom: 20px;">${isCorrect ? 'üéâ' : 'üòî'}</div>
            <h2 style="margin: 0 0 20px 0; font-size: 24px;">${isCorrect ? '–û—Ç–ª–∏—á–Ω–æ!' : '–ù–µ–≤–µ—Ä–Ω–æ!'}</h2>
            <div style="background: rgba(255,255,255,0.1); padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                <div style="font-size: 18px; margin-bottom: 10px;">–ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</div>
                <div style="font-size: 24px; margin-bottom: 10px;">${sequence.map(i => crystals[i]).join(' ')}</div>
                <div style="font-size: 18px; margin-bottom: 10px;">–í–∞—à–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</div>
                <div style="font-size: 24px;">${userSequence.map(i => crystals[i]).join(' ')}</div>
            </div>
            <p style="margin: 0 0 20px 0; font-size: 16px;">
                ${isCorrect ? `–ü–∞–º—è—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ! –í—ã–∏–≥—Ä—ã—à: ${reward} –º–æ–Ω–µ—Ç` : '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!'}
            </p>
            <button onclick="this.closest('.game-modal').remove()" style="
                background: rgba(255,255,255,0.2);
                border: 2px solid white;
                color: white;
                padding: 12px 30px;
                border-radius: 25px;
                cursor: pointer;
                font-size: 16px;
            ">
                –ó–∞–∫—Ä—ã—Ç—å
            </button>
        `;
        
        if (reward > 0) {
            addCoins(reward);
        }
    }
}

// –ò–≥—Ä–∞: –†—É–Ω–∏—á–µ—Å–∫–∞—è –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞
function startRunicQuizGame() {
    console.log('üìö –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã "–†—É–Ω–∏—á–µ—Å–∫–∞—è –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞"');
    const cost = 55;
    const currentBalance = getCurrentBalance();
    
    if (currentBalance < cost) {
        showInsufficientBalance(cost, currentBalance);
        return;
    }
    
    const questions = [
        {
            question: '–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —Ä—É–Ω–∞ –§–µ—Ö—É?',
            options: ['–ë–æ–≥–∞—Ç—Å—Ç–≤–æ', '–°–∏–ª–∞', '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ', '–ë–æ–≥'],
            correct: 0
        },
        {
            question: '–ö–∞–∫–∞—è —Ä—É–Ω–∞ —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç —Å–∏–ª—É?',
            options: ['–§–µ—Ö—É', '–£—Ä—É–∑', '–¢—É—Ä–∏—Å–∞–∑', '–ê–Ω—Å—É–∑'],
            correct: 1
        },
        {
            question: '–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —Ä—É–Ω–∞ –†–∞–π–¥–æ?',
            options: ['–ë–æ–≥–∞—Ç—Å—Ç–≤–æ', '–°–∏–ª–∞', '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ', '–ë–æ–≥'],
            correct: 2
        },
        {
            question: '–ö–∞–∫–∞—è —Ä—É–Ω–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –±–æ–≥–æ–º?',
            options: ['–§–µ—Ö—É', '–£—Ä—É–∑', '–¢—É—Ä–∏—Å–∞–∑', '–ê–Ω—Å—É–∑'],
            correct: 3
        },
        {
            question: '–ß—Ç–æ —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç —Ä—É–Ω–∞ –ö–µ–Ω–∞–∑?',
            options: ['–ë–æ–≥–∞—Ç—Å—Ç–≤–æ', '–§–∞–∫–µ–ª', '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ', '–ë–æ–≥'],
            correct: 1
        }
    ];
    
    const gameModal = document.createElement('div');
    gameModal.className = 'game-modal';
    gameModal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.9);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10000;
        animation: fadeIn 0.3s ease-out;
    `;
    
    const gameContent = document.createElement('div');
    gameContent.style.cssText = `
        background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
        color: white;
        padding: 40px;
        border-radius: 25px;
        text-align: center;
        max-width: 500px;
        width: 90%;
        box-shadow: 0 20px 40px rgba(0,0,0,0.5);
        animation: slideInUp 0.5s ease-out;
    `;
    
    gameContent.innerHTML = `
        <div style="font-size: 60px; margin-bottom: 20px; animation: float 2s ease-in-out infinite;">üìö</div>
        <h2 style="margin: 0 0 20px 0; font-size: 28px;">–†—É–Ω–∏—á–µ—Å–∫–∞—è –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞</h2>
        <p style="margin: 0 0 30px 0; font-size: 16px; opacity: 0.9;">–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ —Ä—É–Ω–∞—Ö!</p>
        
        <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 15px; margin-bottom: 20px;">
            <div style="font-size: 14px; margin-bottom: 5px;">üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${cost} –º–æ–Ω–µ—Ç</div>
            <div style="font-size: 14px;">üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å: ${currentBalance} –º–æ–Ω–µ—Ç</div>
        </div>
        
        <button onclick="startQuiz()" style="
            background: rgba(255,255,255,0.2);
            border: 2px solid white;
            color: white;
            padding: 15px 40px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 18px;
            font-weight: 600;
            transition: all 0.3s ease;
            margin-bottom: 20px;
        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
            üìö –ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É!
        </button>
        
        <button onclick="this.closest('.game-modal').remove()" style="
            background: rgba(255,255,255,0.2);
            border: 2px solid white;
            color: white;
            padding: 12px 30px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s ease;
        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
            –û—Ç–º–µ–Ω–∞
        </button>
    `;
    
    gameModal.appendChild(gameContent);
    document.body.appendChild(gameModal);
    
    function startQuiz() {
        deductCoins(cost);
        
        let currentQuestion = 0;
        let correctAnswers = 0;
        
        function showQuestion() {
            const question = questions[currentQuestion];
            
            gameContent.innerHTML = `
                <div style="font-size: 40px; margin-bottom: 20px;">üìö</div>
                <h2 style="margin: 0 0 20px 0; font-size: 24px;">–í–æ–ø—Ä–æ—Å ${currentQuestion + 1} –∏–∑ ${questions.length}</h2>
                <p style="margin: 0 0 30px 0; font-size: 18px; font-weight: 600;">${question.question}</p>
                
                <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 15px; margin-bottom: 20px;">
                    ${question.options.map((option, index) => `
                        <button class="quiz-option" data-answer="${index}" style="
                            background: rgba(255,255,255,0.2);
                            border: 2px solid rgba(255,255,255,0.3);
                            color: white;
                            padding: 15px;
                            border-radius: 15px;
                            cursor: pointer;
                            font-size: 16px;
                            transition: all 0.3s ease;
                        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
                           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
                            ${option}
                        </button>
                    `).join('')}
                </div>
            `;
            
            gameContent.querySelectorAll('.quiz-option').forEach(button => {
                button.addEventListener('click', function() {
                    const selectedAnswer = parseInt(this.dataset.answer);
                    const isCorrect = selectedAnswer === question.correct;
                    
                    if (isCorrect) {
                        correctAnswers++;
                    }
                    
                    currentQuestion++;
                    
                    if (currentQuestion < questions.length) {
                        setTimeout(() => {
                            showQuestion();
                        }, 1000);
                    } else {
                        showResults();
                    }
                });
            });
        }
        
        function showResults() {
            const percentage = Math.round((correctAnswers / questions.length) * 100);
            let reward = 0;
            
            if (percentage >= 80) reward = 500;
            else if (percentage >= 60) reward = 300;
            else if (percentage >= 40) reward = 150;
            else reward = 50;
            
            gameContent.innerHTML = `
                <div style="font-size: 60px; margin-bottom: 20px;">${percentage >= 80 ? 'üèÜ' : percentage >= 60 ? 'ü•à' : percentage >= 40 ? 'ü•â' : 'üìö'}</div>
                <h2 style="margin: 0 0 20px 0; font-size: 24px;">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã</h2>
                <div style="background: rgba(255,255,255,0.1); padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                    <div style="font-size: 18px; margin-bottom: 10px;">–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${correctAnswers} –∏–∑ ${questions.length}</div>
                    <div style="font-size: 18px; margin-bottom: 10px;">–ü—Ä–æ—Ü–µ–Ω—Ç: ${percentage}%</div>
                    <div style="font-size: 18px;">–í—ã–∏–≥—Ä—ã—à: ${reward} –º–æ–Ω–µ—Ç</div>
                </div>
                <p style="margin: 0 0 20px 0; font-size: 16px;">
                    ${percentage >= 80 ? '–û—Ç–ª–∏—á–Ω—ã–µ –∑–Ω–∞–Ω–∏—è —Ä—É–Ω!' : 
                      percentage >= 60 ? '–•–æ—Ä–æ—à–∏–µ –∑–Ω–∞–Ω–∏—è!' : 
                      percentage >= 40 ? '–ù–µ–ø–ª–æ—Ö–æ!' : '–ò–∑—É—á–∞–π—Ç–µ —Ä—É–Ω—ã –¥–∞–ª—å—à–µ!'}
                </p>
                <button onclick="this.closest('.game-modal').remove()" style="
                    background: rgba(255,255,255,0.2);
                    border: 2px solid white;
                    color: white;
                    padding: 12px 30px;
                    border-radius: 25px;
                    cursor: pointer;
                    font-size: 16px;
                ">
                    –ó–∞–∫—Ä—ã—Ç—å
                </button>
            `;
            
            addCoins(reward);
        }
        
        showQuestion();
    }
}

// –ò–≥—Ä–∞: –¢–∞—Ä–æ-–∫–≤–∏–∑
function startTarotQuizGame() {
    console.log('üé¥ –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã "–¢–∞—Ä–æ-–∫–≤–∏–∑"');
    const cost = 60;
    const currentBalance = getCurrentBalance();
    
    if (currentBalance < cost) {
        showInsufficientBalance(cost, currentBalance);
        return;
    }
    
    const questions = [
        {
            question: '–°–∫–æ–ª—å–∫–æ –∫–∞—Ä—Ç –≤ –∫–æ–ª–æ–¥–µ –¢–∞—Ä–æ?',
            options: ['72', '78', '84', '90'],
            correct: 1
        },
        {
            question: '–°–∫–æ–ª—å–∫–æ –∫–∞—Ä—Ç –≤ –°—Ç–∞—Ä—à–∏—Ö –ê—Ä–∫–∞–Ω–∞—Ö?',
            options: ['20', '21', '22', '23'],
            correct: 2
        },
        {
            question: '–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –∫–∞—Ä—Ç–∞ "–î—É—Ä–∞–∫"?',
            options: ['–ì–ª—É–ø–æ—Å—Ç—å', '–ù–∞—á–∞–ª–æ –ø—É—Ç–∏', '–ö–æ–Ω–µ—Ü', '–ú—É–¥—Ä–æ—Å—Ç—å'],
            correct: 1
        },
        {
            question: '–ö–∞–∫–∞—è –∫–∞—Ä—Ç–∞ –æ–∑–Ω–∞—á–∞–µ—Ç –ª—é–±–æ–≤—å?',
            options: ['–ò–º–ø–µ—Ä–∞—Ç—Ä–∏—Ü–∞', '–í–ª—é–±–ª–µ–Ω–Ω—ã–µ', '–°–æ–ª–Ω—Ü–µ', '–õ—É–Ω–∞'],
            correct: 1
        },
        {
            question: '–ß—Ç–æ —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç –∫–∞—Ä—Ç–∞ "–°–º–µ—Ä—Ç—å"?',
            options: ['–ö–æ–Ω–µ—Ü –∂–∏–∑–Ω–∏', '–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è', '–ë–æ–ª–µ–∑–Ω—å', '–ü–æ—Ç–µ—Ä—è'],
            correct: 1
        }
    ];
    
    const gameModal = document.createElement('div');
    gameModal.className = 'game-modal';
    gameModal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.9);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10000;
        animation: fadeIn 0.3s ease-out;
    `;
    
    const gameContent = document.createElement('div');
    gameContent.style.cssText = `
        background: linear-gradient(135deg, #8e44ad 0%, #9b59b6 100%);
        color: white;
        padding: 40px;
        border-radius: 25px;
        text-align: center;
        max-width: 500px;
        width: 90%;
        box-shadow: 0 20px 40px rgba(0,0,0,0.5);
        animation: slideInUp 0.5s ease-out;
    `;
    
    gameContent.innerHTML = `
        <div style="font-size: 60px; margin-bottom: 20px; animation: float 2s ease-in-out infinite;">üé¥</div>
        <h2 style="margin: 0 0 20px 0; font-size: 28px;">–¢–∞—Ä–æ-–∫–≤–∏–∑</h2>
        <p style="margin: 0 0 30px 0; font-size: 16px; opacity: 0.9;">–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–Ω–∞–Ω–∏—è –∫–∞—Ä—Ç –¢–∞—Ä–æ!</p>
        
        <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 15px; margin-bottom: 20px;">
            <div style="font-size: 14px; margin-bottom: 5px;">üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${cost} –º–æ–Ω–µ—Ç</div>
            <div style="font-size: 14px;">üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å: ${currentBalance} –º–æ–Ω–µ—Ç</div>
        </div>
        
        <button onclick="startTarotQuiz()" style="
            background: rgba(255,255,255,0.2);
            border: 2px solid white;
            color: white;
            padding: 15px 40px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 18px;
            font-weight: 600;
            transition: all 0.3s ease;
            margin-bottom: 20px;
        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
            üé¥ –ù–∞—á–∞—Ç—å –∫–≤–∏–∑!
        </button>
        
        <button onclick="this.closest('.game-modal').remove()" style="
            background: rgba(255,255,255,0.2);
            border: 2px solid white;
            color: white;
            padding: 12px 30px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s ease;
        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
            –û—Ç–º–µ–Ω–∞
        </button>
    `;
    
    gameModal.appendChild(gameContent);
    document.body.appendChild(gameModal);
    
    function startTarotQuiz() {
        deductCoins(cost);
        
        let currentQuestion = 0;
        let correctAnswers = 0;
        
        function showQuestion() {
            const question = questions[currentQuestion];
            
            gameContent.innerHTML = `
                <div style="font-size: 40px; margin-bottom: 20px;">üé¥</div>
                <h2 style="margin: 0 0 20px 0; font-size: 24px;">–í–æ–ø—Ä–æ—Å ${currentQuestion + 1} –∏–∑ ${questions.length}</h2>
                <p style="margin: 0 0 30px 0; font-size: 18px; font-weight: 600;">${question.question}</p>
                
                <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 15px; margin-bottom: 20px;">
                    ${question.options.map((option, index) => `
                        <button class="quiz-option" data-answer="${index}" style="
                            background: rgba(255,255,255,0.2);
                            border: 2px solid rgba(255,255,255,0.3);
                            color: white;
                            padding: 15px;
                            border-radius: 15px;
                            cursor: pointer;
                            font-size: 16px;
                            transition: all 0.3s ease;
                        " onmouseover="this.style.background='rgba(255,255,255,0.3)'" 
                           onmouseout="this.style.background='rgba(255,255,255,0.2)'">
                            ${option}
                        </button>
                    `).join('')}
                </div>
            `;
            
            gameContent.querySelectorAll('.quiz-option').forEach(button => {
                button.addEventListener('click', function() {
                    const selectedAnswer = parseInt(this.dataset.answer);
                    const isCorrect = selectedAnswer === question.correct;
                    
                    if (isCorrect) {
                        correctAnswers++;
                    }
                    
                    currentQuestion++;
                    
                    if (currentQuestion < questions.length) {
                        setTimeout(() => {
                            showQuestion();
                        }, 1000);
                    } else {
                        showResults();
                    }
                });
            });
        }
        
        function showResults() {
            const percentage = Math.round((correctAnswers / questions.length) * 100);
            let reward = 0;
            
            if (percentage >= 80) reward = 600;
            else if (percentage >= 60) reward = 400;
            else if (percentage >= 40) reward = 200;
            else reward = 100;
            
            gameContent.innerHTML = `
                <div style="font-size: 60px; margin-bottom: 20px;">${percentage >= 80 ? 'üèÜ' : percentage >= 60 ? 'ü•à' : percentage >= 40 ? 'ü•â' : 'üé¥'}</div>
                <h2 style="margin: 0 0 20px 0; font-size: 24px;">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–≤–∏–∑–∞</h2>
                <div style="background: rgba(255,255,255,0.1); padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                    <div style="font-size: 18px; margin-bottom: 10px;">–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${correctAnswers} –∏–∑ ${questions.length}</div>
                    <div style="font-size: 18px; margin-bottom: 10px;">–ü—Ä–æ—Ü–µ–Ω—Ç: ${percentage}%</div>
                    <div style="font-size: 18px;">–í—ã–∏–≥—Ä—ã—à: ${reward} –º–æ–Ω–µ—Ç</div>
                </div>
                <p style="margin: 0 0 20px 0; font-size: 16px;">
                    ${percentage >= 80 ? '–û—Ç–ª–∏—á–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –¢–∞—Ä–æ!' : 
                      percentage >= 60 ? '–•–æ—Ä–æ—à–∏–µ –∑–Ω–∞–Ω–∏—è!' : 
                      percentage >= 40 ? '–ù–µ–ø–ª–æ—Ö–æ!' : '–ò–∑—É—á–∞–π—Ç–µ –¢–∞—Ä–æ –¥–∞–ª—å—à–µ!'}
                </p>
                <button onclick="this.closest('.game-modal').remove()" style="
                    background: rgba(255,255,255,0.2);
                    border: 2px solid white;
                    color: white;
                    padding: 12px 30px;
                    border-radius: 25px;
                    cursor: pointer;
                    font-size: 16px;
                ">
                    –ó–∞–∫—Ä—ã—Ç—å
                </button>
            `;
            
            addCoins(reward);
        }
        
        showQuestion();
    }
}
